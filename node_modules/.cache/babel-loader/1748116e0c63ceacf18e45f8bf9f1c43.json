{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Filip Twarowski\\\\Documents\\\\filipt.github.io\\\\my-app\\\\src\\\\components\\\\contact.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport logo from '../logo.png';\nexport default class Contact extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      feedback: '',\n      formSubmitted: false\n    };\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCancel() {\n    this.setState({\n      feedback: ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      feedback: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const {\n      REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n      REACT_APP_EMAILJS_TEMPLATEID: template,\n      REACT_APP_EMAILJS_USERID: user\n    } = this.props.env;\n    this.sendFeedback(template, this.sender, receiverEmail, this.state.feedback, user);\n    this.setState({\n      formSubmitted: true\n    });\n  } // Note: this is using default_service, which will map to whatever\n  // default email provider you've set in your EmailJS account.\n\n\n  sendFeedback(templateId, senderEmail, receiverEmail, feedback, user) {\n    window.emailjs.send('default_service', templateId, {\n      senderEmail,\n      receiverEmail,\n      feedback\n    }, user).then(res => {\n      this.setState({\n        formEmailSent: true\n      });\n    }) // Handle errors here however you like\n    .catch(err => console.error('Failed to send feedback. Error: ', err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"feedback-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, \"Your Feedback\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"text-input\",\n      id: \"feedback-entry\",\n      name: \"feedback-entry\",\n      onChange: this.handleChange,\n      placeholder: \"Enter your feedback here\",\n      required: true,\n      value: this.state.feedback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn--cancel\",\n      onClick: this.handleCancel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      className: \"btn btn--submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nContact.sender = 'sender@example.com';","map":{"version":3,"sources":["C:/Users/Filip Twarowski/Documents/filipt.github.io/my-app/src/components/contact.js"],"names":["React","Component","Navbar","Nav","NavDropdown","logo","Contact","state","feedback","formSubmitted","handleCancel","bind","handleChange","handleSubmit","setState","event","target","value","preventDefault","REACT_APP_EMAILJS_RECEIVER","receiverEmail","REACT_APP_EMAILJS_TEMPLATEID","template","REACT_APP_EMAILJS_USERID","user","props","env","sendFeedback","sender","templateId","senderEmail","window","emailjs","send","then","res","formEmailSent","catch","err","console","error","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\nimport logo from '../logo.png';\r\n\r\nexport default class Contact extends Component {\r\n  state = {\r\n    feedback: '',\r\n    formSubmitted: false\r\n  };\r\n\r\n  handleCancel = this.handleCancel.bind(this);\r\n  handleChange = this.handleChange.bind(this);\r\n  handleSubmit = this.handleSubmit.bind(this);\r\n\r\n  static sender = 'sender@example.com';\r\n\r\n  handleCancel() {\r\n    this.setState({\r\n      feedback: ''\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({\r\n      feedback: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      REACT_APP_EMAILJS_RECEIVER: receiverEmail,\r\n      REACT_APP_EMAILJS_TEMPLATEID: template,\r\n      REACT_APP_EMAILJS_USERID: user,\r\n    } = this.props.env;\r\n\r\n    this.sendFeedback(\r\n      template,\r\n      this.sender,\r\n      receiverEmail,\r\n      this.state.feedback,\r\n      user\r\n    );\r\n\r\n    this.setState({\r\n      formSubmitted: true\r\n    });\r\n  }\r\n\r\n // Note: this is using default_service, which will map to whatever\r\n // default email provider you've set in your EmailJS account.\r\n  sendFeedback(templateId, senderEmail, receiverEmail, feedback, user) {\r\n    window.emailjs\r\n      .send('default_service', templateId, {\r\n          senderEmail,\r\n          receiverEmail,\r\n          feedback\r\n        },\r\n        user\r\n      )\r\n      .then(res => {\r\n        this.setState({\r\n          formEmailSent: true\r\n        });\r\n      })\r\n      // Handle errors here however you like\r\n      .catch(err => console.error('Failed to send feedback. Error: ', err));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"feedback-form\" onSubmit={this.handleSubmit}>\r\n        <h1>Your Feedback</h1>\r\n        <textarea\r\n          className=\"text-input\"\r\n          id=\"feedback-entry\"\r\n          name=\"feedback-entry\"\r\n          onChange={this.handleChange}\r\n          placeholder=\"Enter your feedback here\"\r\n          required\r\n          value={this.state.feedback}\r\n        />\r\n        <div className=\"btn-group\">\r\n          <button className=\"btn btn--cancel\" onClick={this.handleCancel}>\r\n            Cancel\r\n          </button>\r\n          <input type=\"submit\" value=\"Submit\" className=\"btn btn--submit\" />\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n     "]},"metadata":{},"sourceType":"module"}